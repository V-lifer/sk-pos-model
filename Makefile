
# The default target of this Makefile is...
all::

# Section starts with '###'.
#
# Define V=1 to have a more verbose compile.

### Defaults

BASIC_CFLAGS = -std=c99 -Wall -I./argparse
BASIC_LDFLAGS = -lm -lsodium

# Guard against environment variables
LIB_H = 
LIB_OBJS = 
DEP_LIBS =

# Having this variable in your environment would break pipelines because you
# case "cd" to echo its destination to stdout.
unexport CDPATH

### Configurations

uname_S := $(shell sh -c 'uname -s 2>/dev/null || echo not')
uname_M := $(shell sh -c 'uname -m 2>/dev/null || echo not')
uname_O := $(shell sh -c 'uname -o 2>/dev/null || echo not')
uname_R := $(shell sh -c 'uname -r 2>/dev/null || echo not')
uname_P := $(shell sh -c 'uname -p 2>/dev/null || echo not')
uname_V := $(shell sh -c 'uname -v 2>/dev/null || echo not')

# CFLAGS and LDFLAGS are for users to override
CFLAGS ?= -g -O2 -Wall
LDFLAGS ?=
STRIP ?= strip

# We use ALL_* variants
ALL_CFLAGS = $(BASIC_CFLAGS) $(CFLAGS)
ALL_LDFLAGS = $(BASIC_LDFLAGS) $(LDFLAGS)

ifdef PREFIX
	prefix = $(PREFIX)
else
	prefix = /usr/local
endif
bindir = $(prefix)/bin
sbindir = $(prefix)/sbin
sharedir = $(prefix)/share
mandir = share/man
infodir = share/info
export prefix bindir sbindir sharedir

CC = cc
RM = rm -rf
INSTALL = install

ifeq ($(uname_S),Linux)
	ALL_LDFLAGS += -lrt
endif

ifeq ($(uname_S),OpenBSD)
	BASIC_LDFLAGS += -levent_core
else
	BASIC_LDFLAGS += -levent
endif

ifneq ($(findstring $(MAKEFLAGS),s), s)
ifndef V
	QUIET_CC   = @echo ' ' CC   $@;
	QUIET_AR   = @echo ' ' AR   $@;
	QUIET_LINK = @echo ' ' LINK $@;
	QUIET_GEN  = @echo ' ' GEN  $@;
endif
endif

# configuration generated by ./configure script
-include config.mak.autogen
# manual configuration
-include config.mak
